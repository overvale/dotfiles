let mapleader = ','

call plug#begin()
" Improve searching in the buffer
Plug 'junegunn/vim-slash'
" Preview registers
Plug 'junegunn/vim-peekaboo'
" Add readline shortcuts to insert mode
Plug 'tpope/vim-rsi'
" My favorite color scheme
Plug 'lifepillar/vim-gruvbox8'

Plug 'junegunn/fzf.vim'
    set rtp+=/usr/local/opt/fzf
    nnoremap <leader>l :BLines<cr>      " Lines in current buffer
    nnoremap <leader>L :Lines<cr>       " Lines in all loaded buffers
    nnoremap <leader>f :Files<cr>       " Files in dir
    nnoremap <leader>a :Ag<cr>          " Lines in all files in dir
    nnoremap <leader>b :Buffers<cr>
    nnoremap <leader>h :Helptags<cr>
    nnoremap <leader>c :Colors<cr>
    nnoremap <leader>t :Filetypes<cr>
    nnoremap <leader><space> :Commands<cr>

Plug 'tweekmonster/spellrotate.vim'
    nmap <silent> zn <Plug>(SpellRotateForward)
    nmap <silent> zN <Plug>(SpellRotateBackward)
    vmap <silent> zn <Plug>(SpellRotateForwardV)
    vmap <silent> zN <Plug>(SpellRotateBackwardV)

Plug 'plasticboy/vim-markdown'
    " Disable vim-markdown's folding in favor of thinca/vim-ft-markdown_fold
    let g:vim_markdown_folding_disabled=1
    " Disable ge mapping
    map <Plug> <Plug>Markdown_EditUrlUnderCursor
    let g:vim_markdown_toc_autofit = 1
Plug 'thinca/vim-ft-markdown_fold'

call plug#end()

set background=dark
colorscheme gruvbox8
syntax enable

" Statusline
set statusline=\ %f\ %m\ %=\ %l/%c%V\ (%P)\ %y\ 

set encoding=utf-8
set backspace=indent,eol,start
set display+=lastline
set formatoptions=croqn1jl nojoinspaces
set foldlevelstart=99
set hidden confirm
set incsearch ignorecase gdefault
set laststatus=2 showcmd showmode
set listchars=tab:▶\ ,eol:¬,trail:¿,extends:⟩,precedes:⟨,nbsp:╌
set mouse=n
set scrolloff=0 sidescrolloff=5
set shortmess+=I
set spellfile=~/.vim/custom-dictionary.utf-8.add
set spelllang=en_us
set splitbelow splitright
set tabstop=4 softtabstop=4 shiftwidth=4 expandtab
set notimeout ttimeout
set timeoutlen=1000 ttimeoutlen=0
set wildmenu wildmode=longest:full
set wrap linebreak breakindent
set wrapscan
set nostartofline

" Remap U to redo
nnoremap U <c-r>

" Enter command-mode with <space>
noremap <space> :

" Make Y behave like other capitals
nnoremap Y y$

" In Visual Mode I almost never want $ to select the newline
noremap $ g_

" Maintain selection on in/de-dent
xnoremap > >gv
xnoremap < <gv

" Use 'gk' for k, unless a count is given. Useful for relative numbered lines.
noremap <expr> k (v:count == 0 ? 'gk' : 'k')
noremap <expr> j (v:count == 0 ? 'gj' : 'j')

" Break undo before CTRL-U
inoremap <C-U> <C-G>u<C-U>

" Set proper italic escape-codes
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"

" Quickly go to next/previous tab/buffer/window/quickfix/jump
nnoremap ]b :bnext<cr>
nnoremap [b :bprev<cr>
nnoremap ]t :tabn<cr>
nnoremap [t :tabp<cr>
nnoremap [w <c-w>W
nnoremap ]w <c-w>w
nnoremap [q :cN<cr>
nnoremap ]q :cn<cr>
nnoremap [j <c-o>
nnoremap ]j <c-i>

" Use the above mappings instead...
nnoremap <c-o> <nop>
nnoremap <c-i> <nop>
" ...and that frees up <tab> because terms see <c-i> and <tab> as the same
nnoremap <tab> <c-w><c-w>

" Move lines
nnoremap <c-k> :<c-u>execute 'move .' . '--' . v:count1<cr>
nnoremap <c-j> :<c-u>execute 'move .' . '+' . v:count1<cr>
xnoremap <c-k> :<c-u>execute "'<,'>move'<--" . v:count1<cr>gv
xnoremap <c-j> :<c-u>execute "'<,'>move'>+" . v:count1<cr>gv

" Toggle relativenumber
nnoremap <leader>n :set relativenumber!<cr>
nnoremap <leader>N :set number!<cr>

" Select last pasted text
nnoremap gV `[v`]

" Quickly read-in from shell
nnoremap ! :r!

" Insert-Mode Spelling Correction
inoremap <C-l> <c-g>u<Esc>[s1z=`]a<c-g>u

" Never use a mapping when a command will do! This is Vim!
command! H1 :normal yypVr=
command! H2 :normal yypVr-
command! SS :set spell! | set spell?
command! QR :enew ~/home/src/notes/vim-quickref
command! Src :source $MYVIMRC | :echom "vimrc reloaded!"
command! Erc :e $MYVIMRC
command! Wrc :w | :source $MYVIMRC | :echom "vimrc saved and reloaded!"
command! WW :set wrap!
command! TODO vimgrep TODO % | cw
command! DATES vimgrep /\v<\d{4}-\d{2}-\d{2}>/j % | cw

" Except when you want to
nnoremap <leader>, :Erc<cr>
